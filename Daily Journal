Day 1: On day 1 I began by creating a replit to create and test the methods. I started by learning about math.PI and E and how long they go for (about 50 digits). I learned to use math.PI and math.E
Used recursion to solve fibinacci sequence where it returns the digit that you type in. The code works with return fib(n-1)+fib(n-2); and if n<=1 returns the digit that one is.
I also used https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html to relearn scanner to help with the find cost of floor method.

Day 2: I finished the changeNeeded and created a vsCode file to use, but I found my code didn't run so I didn't change it. Through the changeNeeded had a forever whiile loop
that I dont understand what the issue is. I was able to fix the while loop and the code works perfectly now. I also began to work on the calculator and used this website
https://www.javatpoint.com/java-math to find the methods that I could have as a part of my calculator program.

Day 3: I worked on the calculator program and made it working by switching from a while loop to recursion. I made options for trig and inverse trig, the basic four
square root, cube root, and exponents. I then started to work on an alarm clock which I will try and implement a sound which I havent done before in java.
https://www.geeksforgeeks.org/play-audio-file-using-java/ is what I used to begin to learn what sound to play.
https://www.geeksforgeeks.org/java-util-timer-class-java/ for the timer and to understand the clock

Day 4: I learned that using the timer class is probably not the best way because it is used for much more complex problems. Also, I was struggling with the wait and try catch. I could 
get it to run without errors, but the wait method would never actually make the program wait and there was no stop in the amount of time that is waited.
https://www.oreilly.com/library/view/java-threads-second/1565924185/ch04s04.html is a website I began to use to learn more about wait and try catch, but as of now it hasn't worked as I
have not gotten it done.

Day 5: I finally created a way to make the program wait for the desired time I had to have Jacob come over and help with my program. I used a try catch for the sleep method.
I used https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html to help learn about the sleep method and how to use it in a try catch loop.
Im suprised that the other ways that I was trying didnt work and how easily this worked suprised me.

Week 1 reflection: The biggest roadblock so far is the resources arent as helpful as I would like. I would find resources to solve the problem but they often did not work for my code for one reason or another.
As far as on track to complete my goal I would say im at 5/5 because I don't have a hard goal as to how far I want to go and I just want to learn something new about java
every day that I work on the project. As of now there is nothing that Mr. P can help me with unless there are challenges day to day but nothing is a large issue for this project.
From the roadblocks I've faced so far I have learned that there are often more than one way to solve a problem and to look for different solutions when there is a problem. For example,
in the alarm clock method, the timer class would not work any way I tried it so I had to use a sleep method which ended up working for me.

Day 6: Struggled a lot on how to play a sound in java was easily able to put the mp3 into the folder but it became very hard to play the sound the second.
I am not liking how replit dosent work with the different ways I have tried to play the sound but hopefully I can find a solution tomorrow.

Day 7: I think I found the solution to the problem after trying 2 different methods that both did not work in replit I moved all my code into vscode and am beggining to try and 
make the code work there.So far everything has worked well except the new alarm method that has been oddly hard and I am not happy because of it.

Day 8 : I countiuned to make sure the code worked in VSCode. At the start of the class there were many errors that I didnt know what they were caused by. One more day and I give up on the alarm sound.
The different ways to play audio all dont work I wish there was something simple and universal.

Day 9: I started to experiment with the same thing that we had for guitar hero. Its hard to go from haveing a mp3 try to play the sound to having to make your own sound.

Day 10: I finished the alarm clock with help from teacher and got it to play the correct noise. I first had to change from an mp3 to wav file to play the noise I wanted it to play
I also had to run it through debug to tell me what is wrong even though I was correct.
